{"ast":null,"code":"var _jsxFileName = \"/Users/jordanfoor/Flashcards/src/Layout/AddCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { readDeck, createCard } from \"../utils/api/index.js\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCards({\n  deck,\n  setDeck,\n  error,\n  setError,\n  setCards\n}) {\n  _s();\n\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  console.log(\"deckId = \", deckId);\n  console.log(\"number of deck = \", deckId);\n  useEffect(() => {\n    const abortController = new AbortController();\n    deckId && readDeck(deckId, abortController.signal).then(deck => {\n      return setDeck(deck);\n    }).catch(error => setError(error));\n    return () => abortController.abort();\n  }, [deckId]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  async function handleSave() {\n    const front = document.getElementById(\"cardFront\").value;\n    const back = document.getElementById(\"cardBack\").value;\n    const card = {\n      front: front,\n      back: back,\n      deckId: Number(deckId)\n    };\n    const respNewCard = await createCard(deckId, card);\n    setCards(respNewCard);\n    history.push(`/decks/${deckId}`);\n  }\n\n  if (deck && Object.keys(deck).length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: [deck.name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-group\",\n          onSubmit: handleSave,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cardFront\",\n              children: \"Front\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"cardFront\",\n              rows: \"3\",\n              placeholder: \"Front side of card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cardBack\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"cardBack\",\n              rows: \"3\",\n              placeholder: \"Back side of card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            type: \"button\",\n            value: \"Reset\",\n            onClick: () => history.push(`/decks/${deckId}`),\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            value: \"Submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, deck.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, \"addCard\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_s(AddCards, \"NUXGbQPRbauGB9/l0mhTkvsgWDI=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddCards;\nexport default AddCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCards\");","map":{"version":3,"sources":["/Users/jordanfoor/Flashcards/src/Layout/AddCards.js"],"names":["React","useEffect","useHistory","useParams","readDeck","createCard","ErrorMessage","AddCards","deck","setDeck","error","setError","setCards","history","deckId","console","log","abortController","AbortController","signal","then","catch","abort","handleSave","front","document","getElementById","value","back","card","Number","respNewCard","push","Object","keys","length","name","id"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { readDeck, createCard } from \"../utils/api/index.js\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nfunction AddCards({ deck, setDeck, error, setError, setCards }) {\n  const history = useHistory();\n  const { deckId } = useParams();\n  console.log(\"deckId = \", deckId);\n  console.log(\"number of deck = \", deckId);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    deckId &&\n      readDeck(deckId, abortController.signal)\n        .then((deck) => {\n          return setDeck(deck);\n        })\n        .catch((error) => setError(error));\n\n    return () => abortController.abort();\n  }, [deckId]);\n\n  if (error) {\n    return <ErrorMessage error={error} />;\n  }\n  async function handleSave() {\n    const front = document.getElementById(\"cardFront\").value;\n    const back = document.getElementById(\"cardBack\").value;\n    const card = {\n      front: front,\n      back: back,\n      deckId: Number(deckId),\n    };\n    const respNewCard = await createCard(deckId, card);\n    setCards(respNewCard);\n    history.push(`/decks/${deckId}`);\n  }\n  if (deck && Object.keys(deck).length > 0) {\n    return (\n      <main>\n        <nav aria-label=\"breadcrumb\">\n          {\" \"}\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"/\">Home</a>\n            </li>\n            <li className=\"breadcrumb-item\">\n              <p>{deck.name}</p>\n            </li>\n          </ol>\n        </nav>\n        <section key=\"addCard\">\n          <h2 className=\"card-title\">\n            {deck.name}: <span>Add Card</span>\n          </h2>\n          <form key={deck.id} className=\"form-group\" onSubmit={handleSave}>\n            <div className=\"form-group\">\n              <label htmlFor=\"cardFront\">Front</label>\n              <textarea\n                className=\"form-control\"\n                id=\"cardFront\"\n                rows=\"3\"\n                placeholder={\"Front side of card\"}\n              ></textarea>\n              <label htmlFor=\"cardBack\">Back</label>\n              <textarea\n                className=\"form-control\"\n                id=\"cardBack\"\n                rows=\"3\"\n                placeholder={\"Back side of card\"}\n              ></textarea>\n            </div>\n\n            <button\n              className=\"btn btn-secondary\"\n              type=\"button\"\n              value=\"Reset\"\n              onClick={() => history.push(`/decks/${deckId}`)}\n            >\n              Done\n            </button>\n            <button className=\"btn btn-primary\" type=\"submit\" value=\"Submit\">\n              Save\n            </button>\n          </form>\n        </section>\n      </main>\n    );\n  } else {\n    return null;\n  }\n}\nexport default AddCards;\n"]},"metadata":{},"sourceType":"module"}