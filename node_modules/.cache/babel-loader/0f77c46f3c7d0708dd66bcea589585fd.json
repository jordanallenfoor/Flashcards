{"ast":null,"code":"var _jsxFileName = \"/Users/jordanfoor/Flashcards/src/Layout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Decks from \"./Decks\";\nimport ViewDeck from \"./ViewDeck\";\nimport NotFound from \"./NotFound\";\nimport { deleteDeck, listDecks } from \"../utils/api/index.js\";\nimport EditDeck from \"./EditDeck\";\nimport CreateDeck from \"./CreateDeck\";\nimport Study from \"./Study\";\nimport AddCards from \"./AddCards\";\nimport EditCard from \"./EditCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [decks, setDecks] = useState([]); //const prevDecks = usePrevious(decks);\n\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  const [card, setCard] = useState({});\n  const [error, setError] = useState(null);\n  const history = useHistory(); //Get all decks\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(_decks => {\n      return setDecks(_decks);\n    }).catch(error => {\n      setError(error);\n    });\n    return () => abortController.abort();\n  }, []);\n  useEffect(() => {\n    console.log(\"this should change every time decks is updated.\", decks);\n  }, [decks]);\n\n  async function handleDelete({\n    deck\n  }) {\n    const toRemove = deck.id;\n    console.log(toRemove);\n\n    if (window.confirm(\"Delete this deck? You won't be able to recover it.\")) {\n      await deleteDeck(toRemove);\n      history.push(\"/\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Decks, {\n            decks: decks,\n            handleDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/new\",\n          children: /*#__PURE__*/_jsxDEV(CreateDeck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/edit\",\n          children: /*#__PURE__*/_jsxDEV(EditDeck, {\n            deck: deck,\n            setDeck: setDeck,\n            error: error,\n            setError: setError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/study\",\n          children: /*#__PURE__*/_jsxDEV(Study, {\n            decks: decks,\n            setDecks: setDecks,\n            deck: deck,\n            setDeck: setDeck,\n            cards: cards,\n            setCards: setCards,\n            error: error,\n            setError: setError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/:cardId/edit\",\n          children: /*#__PURE__*/_jsxDEV(EditCard, {\n            deck: deck,\n            setDeck: setDeck,\n            card: card,\n            setCard: setCard,\n            error: error,\n            setError: setError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/new\",\n          children: /*#__PURE__*/_jsxDEV(AddCards, {\n            deck: deck,\n            setDeck: setDeck,\n            cards: cards,\n            setCards: setCards,\n            card: card,\n            setCard: setCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId\",\n          children: /*#__PURE__*/_jsxDEV(ViewDeck, {\n            decks: decks,\n            deck: deck,\n            setDeck: setDeck,\n            handleDelete: handleDelete,\n            error: error,\n            setError: setError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"h01vFVOAY2logK93tq0EL6GyAr4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/jordanfoor/Flashcards/src/Layout/index.js"],"names":["React","useState","useEffect","Switch","Route","useHistory","Header","Decks","ViewDeck","NotFound","deleteDeck","listDecks","EditDeck","CreateDeck","Study","AddCards","EditCard","Layout","decks","setDecks","deck","setDeck","cards","setCards","card","setCard","error","setError","history","abortController","AbortController","signal","then","_decks","catch","abort","console","log","handleDelete","toRemove","id","window","confirm","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Decks from \"./Decks\";\nimport ViewDeck from \"./ViewDeck\";\nimport NotFound from \"./NotFound\";\nimport { deleteDeck, listDecks } from \"../utils/api/index.js\";\nimport EditDeck from \"./EditDeck\";\nimport CreateDeck from \"./CreateDeck\";\nimport Study from \"./Study\";\nimport AddCards from \"./AddCards\";\nimport EditCard from \"./EditCard\";\n\nfunction Layout() {\n  const [decks, setDecks] = useState([]);\n  //const prevDecks = usePrevious(decks);\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  const [card, setCard] = useState({});\n  const [error, setError] = useState(null);\n  const history = useHistory();\n\n  //Get all decks\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal)\n      .then((_decks) => {\n        return setDecks(_decks);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n\n    return () => abortController.abort();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"this should change every time decks is updated.\", decks);\n  }, [decks]);\n\n  async function handleDelete({ deck }) {\n    const toRemove = deck.id;\n    console.log(toRemove);\n    if (window.confirm(\"Delete this deck? You won't be able to recover it.\")) {\n      await deleteDeck(toRemove);\n      history.push(\"/\");\n    }\n  }\n\n  return (\n    <section>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Decks decks={decks} handleDelete={handleDelete} />\n          </Route>\n          <Route path=\"/decks/new\">\n            <CreateDeck />\n          </Route>\n          <Route path=\"/decks/:deckId/edit\">\n            <EditDeck\n              deck={deck}\n              setDeck={setDeck}\n              error={error}\n              setError={setError}\n            />\n          </Route>\n          <Route path=\"/decks/:deckId/study\">\n            <Study\n              decks={decks}\n              setDecks={setDecks}\n              deck={deck}\n              setDeck={setDeck}\n              cards={cards}\n              setCards={setCards}\n              error={error}\n              setError={setError}\n            />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n            <EditCard\n              deck={deck}\n              setDeck={setDeck}\n              card={card}\n              setCard={setCard}\n              error={error}\n              setError={setError}\n            />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/new\">\n            <AddCards\n              deck={deck}\n              setDeck={setDeck}\n              cards={cards}\n              setCards={setCards}\n              card={card}\n              setCard={setCard}\n            />\n          </Route>\n\n          <Route path=\"/decks/:deckId\">\n            <ViewDeck\n              decks={decks}\n              deck={deck}\n              setDeck={setDeck}\n              handleDelete={handleDelete}\n              error={error}\n              setError={setError}\n            />\n          </Route>\n          <Route path=\"/decks\"></Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </section>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}