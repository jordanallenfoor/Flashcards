{"ast":null,"code":"var _jsxFileName = \"/Users/jordanfoor/Flashcards/src/Layout/Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index.js\";\nimport Cards from \"./Cards\"; // TODos  Routes to Edit Card, Add Card\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study({\n  decks,\n  setDecks,\n  deck,\n  setDeck,\n  error,\n  setError\n}) {\n  _s();\n\n  let {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(_deck => {\n      return setDeck(_deck);\n    }).catch(error => {\n      setError(error);\n    });\n    return () => abortController.abort();\n  }, []);\n\n  if (deck && Object.keys(deck).length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/decks/${deck.id}`,\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            \"aria-current\": \"page\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Study: \", deck.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Cards, {\n          deck: deck,\n          setDeck: setDeck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  } else {\n    console.log(\"we got no deck??\", deck);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(Study, \"HVFefW5KCGyPdVIEoeyJLI81F8c=\", false, function () {\n  return [useParams];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/jordanfoor/Flashcards/src/Layout/Study.js"],"names":["React","useEffect","useParams","readDeck","Cards","Study","decks","setDecks","deck","setDeck","error","setError","deckId","abortController","AbortController","signal","then","_deck","catch","abort","Object","keys","length","id","name","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,IAAnB;AAAyBC,EAAAA,OAAzB;AAAkCC,EAAAA,KAAlC;AAAyCC,EAAAA;AAAzC,CAAf,EAAoE;AAAA;;AAClE,MAAI;AAAEC,IAAAA;AAAF,MAAaV,SAAS,EAA1B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAX,IAAAA,QAAQ,CAACS,MAAD,EAASC,eAAe,CAACE,MAAzB,CAAR,CACGC,IADH,CACSC,KAAD,IAAW;AACf,aAAOR,OAAO,CAACQ,KAAD,CAAd;AACD,KAHH,EAIGC,KAJH,CAIUR,KAAD,IAAW;AAChBC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KANH;AAQA,WAAO,MAAMG,eAAe,CAACM,KAAhB,EAAb;AACD,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAIX,IAAI,IAAIY,MAAM,CAACC,IAAP,CAAYb,IAAZ,EAAkBc,MAAlB,GAA2B,CAAvC,EAA0C;AACxC,wBACE;AAAA,8BACE;AAAK,sBAAW,YAAhB;AAAA,mBACG,GADH,eAEE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,mCACE;AAAG,cAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,mCACE;AAAG,cAAA,IAAI,EAAG,UAASd,IAAI,CAACe,EAAG,EAA3B;AAAA,wBAA+Bf,IAAI,CAACgB;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAuC,4BAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAA,+BACE;AAAA,gCAAYhB,IAAI,CAACgB,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF,eAkBE;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEhB,IAAb;AAAmB,UAAA,OAAO,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD,GAzBD,MAyBO;AACLgB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgClB,IAAhC;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF;;GA5CQH,K;UACUH,S;;;KADVG,K;AA8CT,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index.js\";\nimport Cards from \"./Cards\";\n\n// TODos  Routes to Edit Card, Add Card\n\nfunction Study({ decks, setDecks, deck, setDeck, error, setError }) {\n  let { deckId } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal)\n      .then((_deck) => {\n        return setDeck(_deck);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n\n    return () => abortController.abort();\n  }, []);\n\n  if (deck && Object.keys(deck).length > 0) {\n    return (\n      <section>\n        <nav aria-label=\"breadcrumb\">\n          {\" \"}\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"/\">Home</a>\n            </li>\n            <li className=\"breadcrumb-item\">\n              <a href={`/decks/${deck.id}`}>{deck.name}</a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Study\n            </li>\n          </ol>\n        </nav>\n        <div>\n          <h2>Study: {deck.name}</h2>\n        </div>\n        <div>\n          <Cards deck={deck} setDeck={setDeck} />\n        </div>\n      </section>\n    );\n  } else {\n    console.log(\"we got no deck??\", deck);\n    return <div>loading!</div>;\n  }\n}\n\nexport default Study;\n"]},"metadata":{},"sourceType":"module"}