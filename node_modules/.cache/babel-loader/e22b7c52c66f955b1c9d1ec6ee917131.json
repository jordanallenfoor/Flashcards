{"ast":null,"code":"var _jsxFileName = \"/Users/jordanfoor/Flashcards/src/Layout/EditOrAddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { createCard, updateCard, readCard, readDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditOrAddCard({\n  currentDeck,\n  setCurrentDeck,\n  currentCard,\n  setCurrentCard\n}) {\n  _s();\n\n  const {\n    path\n  } = useRouteMatch();\n  const marginLeft = {\n    margin: \"0 0 0 10px\"\n  };\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const history = useHistory();\n  console.log(path);\n  /*\n  useEffect(() => {\n    if (path === `/decks/:deckId/cards/new`) {\n      readDeck(deckId).then(setCurrentDeck);\n      console.log(1)\n      setCurrentCard({\n        ...currentCard,\n        front: \"Front of card\",\n        back: \"Back of card\",\n      });\n    } else {\n        console.log(2)\n      readCard(cardId).then(setCurrentCard);\n    }\n  }, []);\n  */\n\n  function handleSubmit(event) {\n    if (path === `/decks/:deckId/cards/new`) {\n      event.preventDefault();\n      createCard(deckId, currentCard);\n      alert(\"Your new card was added to the deck!\");\n      setCurrentCard(prevState => prevState = { ...currentCard,\n        front: \"Front of card\",\n        back: \"Back of card\"\n      });\n    } else {\n      event.preventDefault();\n\n      if (window.confirm(\"Are you sure you would like to edit this card?\")) {\n        updateCard(currentCard);\n        goBack();\n      }\n    }\n  }\n\n  function handleChange({\n    target\n  }) {\n    if (path === `/decks/:deckId/cards/new`) {\n      setCurrentCard(prevState => prevState = { ...currentCard,\n        [target.name]: target.value\n      });\n    } else {\n      setCurrentCard(prevState => prevState = { ...currentCard,\n        [target.name]: target.value\n      });\n    }\n  }\n\n  function goBack() {\n    history.push(`/decks/${deckId}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"front\",\n        style: {\n          width: \"100%\"\n        },\n        className: \"form-label\",\n        children: [\"Front\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          className: \"form-control\",\n          id: \"back\",\n          name: \"front\",\n          onChange: handleChange,\n          value: currentCard.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"back\",\n        style: {\n          width: \"100%\"\n        },\n        className: \"form-label\",\n        children: [\"Back\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          className: \"form-control\",\n          id: \"back\",\n          name: \"back\",\n          onChange: handleChange,\n          value: currentCard.back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goBack,\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      style: marginLeft,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditOrAddCard, \"V3nw0prCES715Zp+OqKXF2DEiBI=\", false, function () {\n  return [useRouteMatch, useParams, useHistory];\n});\n\n_c = EditOrAddCard;\nexport default EditOrAddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditOrAddCard\");","map":{"version":3,"sources":["/Users/jordanfoor/Flashcards/src/Layout/EditOrAddCard.js"],"names":["React","useEffect","useRouteMatch","useParams","useHistory","createCard","updateCard","readCard","readDeck","EditOrAddCard","currentDeck","setCurrentDeck","currentCard","setCurrentCard","path","marginLeft","margin","deckId","cardId","history","console","log","handleSubmit","event","preventDefault","alert","prevState","front","back","window","confirm","goBack","handleChange","target","name","value","push","width"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { createCard, updateCard, readCard, readDeck } from \"../utils/api/index\";\n\nfunction EditOrAddCard({\n  currentDeck,\n  setCurrentDeck,\n  currentCard,\n  setCurrentCard,\n}) {\n  const { path } = useRouteMatch();\n  const marginLeft = { margin: \"0 0 0 10px\" };\n  const { deckId, cardId } = useParams();\n  const history = useHistory();\n  console.log(path);\n  /*\n  useEffect(() => {\n    if (path === `/decks/:deckId/cards/new`) {\n      readDeck(deckId).then(setCurrentDeck);\n      console.log(1)\n      setCurrentCard({\n        ...currentCard,\n        front: \"Front of card\",\n        back: \"Back of card\",\n      });\n    } else {\n        console.log(2)\n      readCard(cardId).then(setCurrentCard);\n    }\n  }, []);\n*/\n  function handleSubmit(event) {\n    if (path === `/decks/:deckId/cards/new`) {\n      event.preventDefault();\n      createCard(deckId, currentCard);\n      alert(\"Your new card was added to the deck!\");\n      setCurrentCard(\n        (prevState) =>\n          (prevState = {\n            ...currentCard,\n            front: \"Front of card\",\n            back: \"Back of card\",\n          })\n      );\n    } else {\n      event.preventDefault();\n\n      if (window.confirm(\"Are you sure you would like to edit this card?\")) {\n        updateCard(currentCard);\n        goBack();\n      }\n    }\n  }\n\n  function handleChange({ target }) {\n    if (path === `/decks/:deckId/cards/new`) {\n      setCurrentCard(\n        (prevState) =>\n          (prevState = {\n            ...currentCard,\n            [target.name]: target.value,\n          })\n      );\n    } else {\n      setCurrentCard(\n        (prevState) =>\n          (prevState = {\n            ...currentCard,\n            [target.name]: target.value,\n          })\n      );\n    }\n  }\n\n  function goBack() {\n    history.push(`/decks/${deckId}`);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"mb-3\">\n        <label for=\"front\" style={{ width: \"100%\" }} className=\"form-label\">\n          Front\n          <textarea\n            rows=\"5\"\n            className=\"form-control\"\n            id=\"back\"\n            name=\"front\"\n            onChange={handleChange}\n            value={currentCard.front}\n          />\n        </label>\n      </div>\n      <div className=\"mb-3\">\n        <label for=\"back\" style={{ width: \"100%\" }} className=\"form-label\">\n          Back\n          <textarea\n            rows=\"5\"\n            className=\"form-control\"\n            id=\"back\"\n            name=\"back\"\n            onChange={handleChange}\n            value={currentCard.back}\n          />\n        </label>\n      </div>\n      <button onClick={goBack} type=\"button\" className=\"btn btn-secondary\">\n        Cancel\n      </button>\n      <button type=\"submit\" className=\"btn btn-primary\" style={marginLeft}>\n        Submit\n      </button>\n    </form>\n  );\n}\n\nexport default EditOrAddCard;\n"]},"metadata":{},"sourceType":"module"}