{"ast":null,"code":"var _jsxFileName = \"/Users/jordanfoor/Flashcards/src/Layout/Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport { ReloadOutline, ChevronForwardOutline } from \"react-ionicons\";\nimport AddCardsBtn from \"./AddCardsBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study({\n  cardInfo,\n  setCardInfo,\n  currentCard,\n  setCurrentCard,\n  currentCards,\n  setCurrentCards,\n  currentDeck,\n  setCurrentDeck\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [flip, setFlip] = useState(true);\n\n  function handleFlip() {\n    setFlip(current => current = !flip);\n  }\n\n  function handleClick() {\n    if (currentCard < currentCards.length) {\n      setCurrentCard(prevState => prevState = prevState + 1);\n      setFlip(prevState => prevState = !flip);\n    } else {\n      if (window.confirm(\"Do you want to reset the deck?\")) {\n        setCurrentCard(prevState => prevState = 1);\n        setFlip(true);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }\n\n  useEffect(() => {\n    async function getDeck() {\n      const result = await readDeck(deckId);\n      const card = currentCard - 1;\n\n      try {\n        setCardInfo({\n          id: result.cards[card].id,\n          front: result.cards[card].front,\n          back: result.cards[card].back,\n          deckId: result.cards[card].deckId\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      setCurrentDeck(result);\n      setCurrentCards(result.cards);\n    }\n\n    getDeck();\n  }, [currentCard]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid d-flex justify-content-center\",\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrum\",\n        className: \"navbar navbar-light bg-light col-9\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            listStyle: \"none\",\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${deckId}`,\n              children: currentDeck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [currentDeck.name, \": Study\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid card d-flex justify-content-center col-9\",\n      children: currentCards.length > 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Card \", currentCard, \" of \", currentCards.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: flip ? cardInfo.front : cardInfo.back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container d-flex\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: flip ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"btn\",\n              onClick: handleFlip,\n              className: \"btn btn-secondary\",\n              children: [\"flip\", /*#__PURE__*/_jsxDEV(ReloadOutline, {\n                color: \"#00000\",\n                title: \"turn-card\",\n                style: {\n                  marginLeft: \"10px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"btn\",\n              onClick: handleClick,\n              className: \"btn btn-primary\",\n              children: [\"next\", /*#__PURE__*/_jsxDEV(ChevronForwardOutline, {\n                color: \"#00000\",\n                title: \"change-card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Not enough cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You need at least 3 cards to study. There\", currentCards.length > 1 ? \" are \" : \" is \", currentCards.length, currentCards.length > 1 ? \" cards \" : \" card\", \" in this deck.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container d-flex\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(AddCardsBtn, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Study, \"jzPC7xDnyNDW2rA1s1YEDKIciPw=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/jordanfoor/Flashcards/src/Layout/Study.js"],"names":["React","useEffect","useState","useParams","Link","useHistory","readDeck","ReloadOutline","ChevronForwardOutline","AddCardsBtn","Study","cardInfo","setCardInfo","currentCard","setCurrentCard","currentCards","setCurrentCards","currentDeck","setCurrentDeck","deckId","history","flip","setFlip","handleFlip","current","handleClick","length","prevState","window","confirm","push","getDeck","result","card","id","cards","front","back","error","console","log","marginBottom","listStyle","display","name","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport { ReloadOutline, ChevronForwardOutline } from \"react-ionicons\";\nimport AddCardsBtn from \"./AddCardsBtn\";\n\nfunction Study({\n  cardInfo,\n  setCardInfo,\n  currentCard,\n  setCurrentCard,\n  currentCards,\n  setCurrentCards,\n  currentDeck,\n  setCurrentDeck,\n}) {\n  const { deckId } = useParams();\n  const history = useHistory();\n\n  const [flip, setFlip] = useState(true);\n\n  function handleFlip() {\n    setFlip((current) => (current = !flip));\n  }\n\n  function handleClick() {\n    if (currentCard < currentCards.length) {\n      setCurrentCard((prevState) => (prevState = prevState + 1));\n      setFlip((prevState) => (prevState = !flip));\n    } else {\n      if (window.confirm(\"Do you want to reset the deck?\")) {\n        setCurrentCard((prevState) => (prevState = 1));\n        setFlip(true);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }\n\n  useEffect(() => {\n    async function getDeck() {\n      const result = await readDeck(deckId);\n      const card = currentCard - 1;\n      try {\n        setCardInfo({\n          id: result.cards[card].id,\n          front: result.cards[card].front,\n          back: result.cards[card].back,\n          deckId: result.cards[card].deckId,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      setCurrentDeck(result);\n      setCurrentCards(result.cards);\n    }\n\n    getDeck();\n  }, [currentCard]);\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"container-fluid d-flex justify-content-center\"\n        style={{ marginBottom: \"20px\" }}\n      >\n        <nav\n          aria-label=\"breadcrum\"\n          className=\"navbar navbar-light bg-light col-9\"\n        >\n          <ol style={{ listStyle: \"none\", display: \"flex\" }}>\n            <li className=\"breadcrumb-item\">\n              <Link to=\"/\">Home</Link>\n            </li>\n\n            <li className=\"breadcrumb-item\">\n              <Link to={`/decks/${deckId}`}>{currentDeck.name}</Link>\n            </li>\n            <li className=\"breadcrumb-item active\">Study</li>\n          </ol>\n        </nav>\n      </div>\n\n      <div className=\"container-fluid d-flex justify-content-center\">\n        <h2>{currentDeck.name}: Study</h2>\n      </div>\n      <div className=\"container-fluid card d-flex justify-content-center col-9\">\n        {currentCards.length > 2 ? (\n          <div className=\"card-body\">\n            <h4>\n              Card {currentCard} of {currentCards.length}\n            </h4>\n            <p>{flip ? cardInfo.front : cardInfo.back}</p>\n\n            <div className=\"container d-flex\">\n              <div className=\"row\">\n                {flip ? (\n                  <button\n                    type=\"btn\"\n                    onClick={handleFlip}\n                    className=\"btn btn-secondary\"\n                  >\n                    flip\n                    <ReloadOutline\n                      color={\"#00000\"}\n                      title={\"turn-card\"}\n                      style={{ marginLeft: \"10px\" }}\n                    />\n                  </button>\n                ) : (\n                  <button\n                    type=\"btn\"\n                    onClick={handleClick}\n                    className=\"btn btn-primary\"\n                  >\n                    next\n                    <ChevronForwardOutline\n                      color={\"#00000\"}\n                      title={\"change-card\"}\n                    />\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"card-body\">\n            <h4>Not enough cards</h4>\n            <p>\n              You need at least 3 cards to study. There\n              {currentCards.length > 1 ? \" are \" : \" is \"}\n              {currentCards.length}\n              {currentCards.length > 1 ? \" cards \" : \" card\"} in this deck.\n            </p>\n            <div className=\"container d-flex\">\n              <div className=\"row\">\n                <AddCardsBtn />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Study;\n"]},"metadata":{},"sourceType":"module"}