{"ast":null,"code":"var _jsxFileName = \"/Users/jordanfoor/Flashcards/src/Layout/DeleteDeckBtn.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { deleteDeck, listDecks } from \"../utils/api/index\";\nimport { useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { TrashOutline } from \"react-ionicons\"; //delete component to return delete button and handle deletion of deck\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeleteDeckBtn({\n  setCurrentDecks\n}) {\n  _s();\n\n  //create newDecks variable in Delete scope, to be set by deleteDeck and returned by Delete\n  const {\n    path\n  } = useRouteMatch();\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n\n  function deleter(event) {\n    const id = event.target.closest(\".card\").id; // if user confirms delete, filter decks by comparing index to deck id and assign result to newDecks\n\n    if (window.confirm(\"Are you sure you want to delete this deck?\")) {\n      try {\n        if (path === \"/decks/:deckId\") {\n          deleteDeck(deckId);\n          history.push(\"/\");\n        } else {\n          deleteDeck(id);\n        }\n\n        listDecks().then(response => {\n          setCurrentDecks(prevState => prevState = response);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: deleter,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TrashOutline, {\n          color: \"#00000\",\n          title: \"delete-deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeleteDeckBtn, \"3kPRWNX1g5pQI5LTvbMHKccDymE=\", false, function () {\n  return [useRouteMatch, useParams, useHistory];\n});\n\n_c = DeleteDeckBtn;\nexport default DeleteDeckBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteDeckBtn\");","map":{"version":3,"sources":["/Users/jordanfoor/Flashcards/src/Layout/DeleteDeckBtn.js"],"names":["React","deleteDeck","listDecks","useRouteMatch","useParams","useHistory","TrashOutline","DeleteDeckBtn","setCurrentDecks","path","deckId","history","deleter","event","id","target","closest","window","confirm","push","then","response","prevState","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,oBAAtC;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,kBAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B,C,CAEA;;;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA4C;AAAA;;AAC1C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWN,aAAa,EAA9B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AACA,QAAMO,OAAO,GAAGN,UAAU,EAA1B;;AACA,WAASO,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,UAAMC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqB,OAArB,EAA8BF,EAAzC,CADsB,CAGtB;;AACA,QAAIG,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAJ,EAAkE;AAChE,UAAI;AACF,YAAIT,IAAI,KAAK,gBAAb,EAA+B;AAC7BR,UAAAA,UAAU,CAACS,MAAD,CAAV;AACAC,UAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACD,SAHD,MAGO;AACLlB,UAAAA,UAAU,CAACa,EAAD,CAAV;AACD;;AACDZ,QAAAA,SAAS,GAAGkB,IAAZ,CAAkBC,QAAD,IAAc;AAC7Bb,UAAAA,eAAe,CAAEc,SAAD,IAAgBA,SAAS,GAAGD,QAA7B,CAAf;AACD,SAFD;AAGD,OAVD,CAUE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAEX,OAA5C;AAAA,6BACE;AAAA,+BAAM,QAAC,YAAD;AAAc,UAAA,KAAK,EAAE,QAArB;AAA+B,UAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAjCQL,a;UAEUJ,a,EACEC,S,EACHC,U;;;KAJTE,a;AAmCT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { deleteDeck, listDecks } from \"../utils/api/index\";\nimport { useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { TrashOutline } from \"react-ionicons\";\n\n//delete component to return delete button and handle deletion of deck\n\nfunction DeleteDeckBtn({ setCurrentDecks }) {\n  //create newDecks variable in Delete scope, to be set by deleteDeck and returned by Delete\n  const { path } = useRouteMatch();\n  const { deckId } = useParams();\n  const history = useHistory();\n  function deleter(event) {\n    const id = event.target.closest(\".card\").id;\n\n    // if user confirms delete, filter decks by comparing index to deck id and assign result to newDecks\n    if (window.confirm(\"Are you sure you want to delete this deck?\")) {\n      try {\n        if (path === \"/decks/:deckId\") {\n          deleteDeck(deckId);\n          history.push(\"/\");\n        } else {\n          deleteDeck(id);\n        }\n        listDecks().then((response) => {\n          setCurrentDecks((prevState) => (prevState = response));\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return (\n    <div className=\"d-flex\">\n      <button className=\"btn btn-danger\" onClick={deleter}>\n        <div>{<TrashOutline color={\"#00000\"} title=\"delete-deck\" />}</div>\n      </button>\n    </div>\n  );\n}\n\nexport default DeleteDeckBtn;\n"]},"metadata":{},"sourceType":"module"}